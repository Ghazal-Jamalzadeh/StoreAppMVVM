Lottie----------------------------------------------------------------------------------------------
res -> RClick -> new android resource directory -> raw -> insert your animation here

then use it like this :

    <com.airbnb.lottie.LottieAnimationView
        android:id="@+id/animationView"
        android:layout_width="match_parent"
        android:layout_height="@dimen/_180mdp"
        android:layout_marginTop="@dimen/_10mdp"
        app:lottie_autoPlay="true"
        app:lottie_loop="false"
        app:layout_constraintTop_toBottomOf="@id/infoTxt"
        app:lottie_rawRes="@raw/lottie_phone" />

Focusable Attr--------------------------------------------------------------------------------------
این ویژگی ها که داخل لایه روت صفحات لاگین گذاشتیم به چه دردی میخورن؟

    android:focusable="true"
    android:focusableInTouchMode="true"

توی صفحاتی که ما ادیت تکست داریم
زمانی که صفحه من ساخته میشه به صورت خودکار کیبورد میاد بالا
این ممکنه چیزی نباشه که خیلی جالب باشه
این کدها رو میزنیم که از این اتفاق جلوگیری کنیم
میایم این دو تا فوکوس رو روی یک ویوی خنثی میذاریم
همون اول کار روی اینا فوکوس میشه
دیگه کیبورد اینا الکی باز نمیشن

PinView----------------------------------------------------------------------------------------------
    <com.goodiebag.pinview.Pinview
        android:id="@+id/pinView"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginTop="@dimen/_15mdp"
        app:forceKeyboard="false"
        app:hint="0"
        app:inputType="number"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@id/animationView"
        app:pinBackground="@drawable/bg_otp" // این یک بک گراند است که با سلکتور ساخته شده
        app:pinHeight="@dimen/_35mdp"
        app:pinLength="4"
        app:pinWidth="@dimen/_35mdp"
        app:textSize="@dimen/_6font_mdp" />

LinearProgressIndicator-----------------------------------------------------------------------------
        <com.google.android.material.progressindicator.LinearProgressIndicator
            android:id="@+id/timerProgress"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:indeterminate="false"//
            android:max="60" // چون ۶۰ ثانیه هست تایمرمون
            android:progress="60"
            android:rotation="180" // RTL
            app:indicatorColor="@color/darkTurquoise" //رنگ ها
            app:trackColor="@color/lightTurquoise" // رنگ ها
            app:trackCornerRadius="@dimen/_8mdp"
            app:trackThickness="@dimen/_40mdp" />

Customize Bottom Nav--------------------------------------------------------------------------------

    <com.google.android.material.bottomnavigation.BottomNavigationView
        android:id="@+id/bottomNav"
        android:layout_width="0dp"
        android:layout_height="wrap_content"
        android:layout_marginHorizontal="@dimen/_30mdp"
        android:layout_marginBottom="@dimen/_20mdp"
        android:background="@drawable/bg_bottom_menu" // بک گراند دلخواه
        android:outlineAmbientShadowColor="@color/eerieBlack" //سایه رنگی توی api های زیر ۲۸ دیده نمیشه و طوسیه
        android:outlineSpotShadowColor="@color/eerieBlack" // سایه رنگی توی api های زیر ۲۸ دیده نمیشه و طوسیه
        android:paddingVertical="@dimen/_3mdp"
        app:elevation="@dimen/_50mdp"
        app:itemIconSize="@dimen/_15mdp" // سایز آیکون های منو
        app:itemIconTint="@color/item_bottom_nav_tint"// رنگ آیکون ها (سلکتور)
        app:itemRippleColor="@color/darkStrategy" // وقتی روی آیتم ها کلیک میشه ریپل چه رنگی باشه
        app:itemTextAppearanceActive="@style/BottomNavigationViewFont" // برای ست کردن فونت باید اسستایل بدیم چون اینجا از کالی گرافی نمیخونه
        app:itemTextColor="@color/item_bottom_nav_tint" //برای ایجاد رنگ هایی که تو حالت سلکت رنگ متفاوتی دارن توی پوشه کالر باید تعریف کنیم تا با حالت سلکتور باشن
        app:labelVisibilityMode="selected" // فقط وقتی سلکت است لیبل رو ببینیم
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:menu="@menu/menu_home"
        tools:targetApi="p" />

استایل
    <!--Bottom navigation font-->
    <style name="BottomNavigationViewFont" parent="@style/TextAppearance.AppCompat.Caption">
        <item name="android:textSize">@dimen/_8font_mdp</item>
        <item name="fontFamily">@font/iransans</item>
    </style>
برای فهمیدن پرنت ها از داکیومنت های متریال ۲ یا ۳ برید بخونید
یادآوری:
وقتی استایل مینویسیم
اونا که اندروید هست رو باید بنویسیم
اونا که اپ هست رو لازم نیست بنویسیم
فونت:
فونت فمیلی رو از اپ بردارید
(چون برای اندروید هم داره ولی اگه بخوایم روی همه دستگاه ها اعمال شه از اپ استفاده کنید)
کلا اتریبیوت هایی که هم اندروید دارن هم اپ اگه بیاید از اندرویدش استفاده کنید
میاد از اون ورژنی که واقعا داره ساپورت میشه به بعد رو نشون میده
ولی اپ نه
همه ورژن ها رو پوشش میده
دایرکتوری فونت:
باید بسازیمش و فونت ها رو بندازیم توش
توی کالی گرافی نیاز نبود این فولدر ساخته شه

        app:itemTextAppearanceActive="@style/BottomNavigationViewFont.Active"
        app:itemTextAppearanceInactive="@style/BottomNavigationViewFont"
        میشه دو تا استایل جداگانه برای حالت اکتیو و دی اکتیو ساخت حتی

Shapeable ImageView---------------------------------------------------------------------------------
    <com.google.android.material.imageview.ShapeableImageView
        android:id="@+id/avatarImg"
        style="@style/ColoredShadowDark" // برای سایه های رنگی توی کل اپ استایل نوشتیم
        android:layout_width="@dimen/_35mdp"
        android:layout_height="@dimen/_35mdp"
        android:layout_marginTop="@dimen/_10mdp"
        android:layout_marginEnd="@dimen/_15mdp"
        android:background="@color/white"
        android:elevation="@dimen/_15mdp"
        android:padding="@dimen/_1mdp"
        android:scaleType="centerCrop"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintTop_toTopOf="parent"
        app:shapeAppearance="@style/CircleImage" // کرنرها
        app:strokeColor="@color/water"
        app:strokeWidth="@dimen/_1mdp" />

Progress bar----------------------------------------------------------------------------------------
    <ProgressBar
        android:id="@+id/avatarLoading"
        android:layout_width="@dimen/_20mdp"
        android:layout_height="@dimen/_20mdp"
        android:elevation="@dimen/_16mdp"
        android:theme="@style/DarkProgressbar" // رنگشو با تم عوض میکنیم
        app:layout_constraintBottom_toBottomOf="@id/avatarImg"
        app:layout_constraintEnd_toEndOf="@id/avatarImg"
        app:layout_constraintStart_toStartOf="@id/avatarImg"
        app:layout_constraintTop_toTopOf="@id/avatarImg" />

CarouselRecyclerview--------------------------------------------------------------------------------
     <com.jackandphantom.carouselrecyclerview.CarouselRecyclerview
         android:id="@+id/bannerList"
         android:layout_width="match_parent"
         android:layout_height="@dimen/_145mdp"
         android:visibility="gone" />

         برای حالت افکتی که بنرهامون قراره داشته باشن

CircleIndicator2 -----------------------------------------------------------------------------------
      <!--Banner indicator-->
      <me.relex.circleindicator.CircleIndicator2
          android:id="@+id/bannerIndicator"
          android:layout_width="wrap_content"
          android:layout_height="@dimen/_10mdp"
          android:layout_gravity="center_horizontal"
          app:ci_drawable="@drawable/indicator_selected" //رنگ ها در حال انتخاب
          app:ci_drawable_unselected="@drawable/indicator_unselected" // رنگ ها در حالت عادی
          app:ci_margin="@dimen/_3mdp"
          app:circularflow_defaultRadius="@dimen/_5mdp" />

View Stub-------------------------------------------------------------------------------------------
این یک ویوی خیلی ناشناخته هست که پرفورمنس شما رو از ۶۰ میرسونه به ۹۰

include vs viewStub:
از نظر عملکردی مشابه هم هستن
جفتشونم ویوهایی که جای دیگه ای ساخته شدن رو میان نشون میدن
(چون تعداد خط کد توی لایه از 700 800 تا بره بالاتر پرفورمنس میترکه و صفحه دیر لود میشه)

ولی چه فرقی دارن؟
فرقشون زمین تا آسمونه
توی پیش نمایش لایه وقتی اینکلود رو سلکت میکنیم نشون میده و سلکت میشه
ولی ویو استاب رو اصلا نشون نمیده
چرا؟
به یک دلیل خیلی مهم
اینکلود همون اول میاد ویوی من رو جنریت میکنه
یعنی هم زمان با ساخته شدن ui من اینکلودها هم ساخته میشن
ولی ویو استاب رو همون اول نمیسازه
وقتی بهش نیاز پیدا میکنید میسازدش
شبیه اتفاقی که توی ریسایکر ویو می افته و تا زمانی که ویو توی اسکرین ظاهر نشده جنریت نمیشه
بی نهایت پرفورمنس رو میبره بالا توی صفحات سنگین
مثلا تا قبل اینکه دیتا از api بیاد هم چیزی نمیسازه
ما بهش میگیم کی بساز لایه رو.
با استفاده از inflate
جلوتر یاد میگیریم
----------------------------------------------------
برای هندل کردن ریسایکلرویوهای هوم:
روش اول
یک  روش استفاده از ویو استاب هست که خیلی سنگینی لود شدن صفحه رو کم میکنه

روش دوم
به جای استفاده از ویو استاب میتونید از کاستوم ویو هم استفاده کنید...
ولی توی این دوره جاش نیست
ولی پرهزینه و ایناست کلا

روش سوم
استفاده از ریسایکلرویو
یعنی ریسایکلرویو داخل ریسایکلر ویو
به صورت داینامیک
جلوتر نستد ریسایکلر ویو یا نستد اداپتر رو یاد میگیریم
ولی برای اینجا سنگینه چون آیتم هایی که اینا دارن محاسبا سنگین داره
-------------------------------------------
نحوه استفاده از ویو استاب:
کد مربوط به فرگمنت هوم
            if (mobileLay.parent != null) {

با این  خط کد خیلی راحت اون لایه اینفلیت میشه و نشون داده میشه
                val mobileInflate = mobileLay.inflate()

برای دسترسی به ویوهای داخلی ویواستاب باید مقدار بالا رو توی یک متغیر بریزیم
و به این شکل با آیدی بهشون دسترسی پیدا کنیم
                mobileInflate.findViewById(R.id.mobileProductsList)

            }

یک نکته مهم هم داره این عملیات:
اگه این رو رعایت نکنیم ممکنه به ارور بخوریم و پیدا کردن ارورش هم سخته
زمانی که میخوای اینفلیت کنی
اینفلیت یعنی چی؟
یعنی بیا یک ویویی رو به یک کلاسی چیزی بچسبون که من بتونم ازش استفاده کنم
و برای اینکه بتونی اینفلیت کنی باید بدونه که به چی باید اینفلیت بشه
اینجا به چی باید اینفلیت بشه؟
به پرنتش
بعضی وقتا دسترسی به پرنت نداره.کی؟
موقع جا به جایی سریع بین صفحات
موقع دیلی ریزی پیش بیاد
پس قبل اینفلیت شدن نال بودن پرنت رو چک کنید

Styles-----------------------------------------------------------------------------------------------
به طور کلی وقتی روی ویژگی های عمومی که توی همه ویوها مشترکن استایل مینویسیم
نیازی به پرنت نداریم

--------------------------------------------------------------------------------------------روبان کج
تکنیک ساختن یک ویویی که یه حالت روبان کج داره

برای شروع یک تکست ویوی ساده میسازیم که یک بک گراند رنگی داره
بعد خیلی راحت از طریق مارجین و روتیت به شکلی که میخوایم در میاریمش
android:rotation="45"
با ویژگی بالا کج میشه ولی توی جای مناسبی قرار نمیگیره
میایم یک مارجین اندی بهش میدیم که جاش تنظیم شه


        <!--Discount-->
        <TextView
            android:id="@+id/itemDiscount"
            android:layout_width="0dp"
            android:layout_height="@dimen/_20mdp"
            android:layout_marginTop="@dimen/_15mdp"
            android:layout_marginEnd="@dimen/mines50mdp"
            android:background="@color/salmon"
            android:gravity="center"
            android:rotation="45"
            android:textColor="@color/white"
            android:textSize="@dimen/_10font_mdp"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintStart_toStartOf="@id/itemImg"
            app:layout_constraintTop_toTopOf="parent"
            tools:text="2400 ت" />

Enter Button in EditText----------------------------------------------------------------------------
اگه بخوایم به جای دکمه اینتر توی ادیت تکست
مثلا دکمه done داشته باشیم

android:imeOptions="actionDone"

یا مثلا اگه بخوایم بره روی فیلد بعدی

android:imeOptions="actionNext"

تقریبا ده دوازده تا آپشن داره...

angeSlider -----------------------------------------------------------------------------------------
قبلا گوگل اینو نداشت ولی بالاخره اضافه کردش
از این اسلایدرها که میشه رنج توش انتخاب کرد و دو تا سر دارن
شبیه سیک بار اندروید هست
ولی تفاوت هایی دارن با هم


    <com.google.android.material.slider.RangeSlider
        android:id="@+id/priceRange"
        style="@style/MyRangeStyle"
        android:layout_width="0dp"
        android:layout_height="wrap_content"
        android:valueFrom="10" // minimum
        android:valueTo="30000000" //maximum
        app:labelBehavior="withinBounds" // مربوط به افکت نمایش تولتیپ
        app:layout_constraintEnd_toEndOf="@+id/searchEdt"
        app:layout_constraintStart_toStartOf="@+id/searchEdt"
        app:layout_constraintTop_toBottomOf="@+id/priceTxt" />
        اگر مایل نباشید تولتیپ نمایش داده شه میتونید کلا بگید gone شه و...

اگه براش استایل اختصاصی ننویسیم زیاد به درد نمیخوره و زشته

    <!--Range Slider-->
    <style name="MyRangeStyle" parent="Widget.MaterialComponents.Slider"> // پرنتش اسلایدره
        <item name="materialThemeOverlay">@style/BlueSlider</item> // رنگش - تمش که خودمون تعریف کردیم پایین
        <item name="labelStyle">@style/Widget.Tooltip</item> // تولتیپ - پایین تعریفش کردیم
    </style>

    <style name="BlueSlider"> // تم مربوط به اسلایدر رو اینجا تعریف میکنیم
        <item name="colorPrimary">@color/dodgerBlue</item> // دایره ها
        <item name="colorOnPrimary">@color/lavender</item> //خط
    </style>

    <style name="Widget.Tooltip" parent="Widget.MaterialComponents.Tooltip"> // پرنتش تولتیپه
        <item name="backgroundTint">@color/dodgerBlue</item> // رنگ بک گراندش
        <item name="android:textAppearance">@style/TextAppearance.Tooltip</item> // فونتش ایران سنس باشه چون به صورت پیش فرض فونت دیفالت داره. پایین تعریف کردیم اینو هم
    </style>

        <style name="TextAppearance.Tooltip" parent="TextAppearance.MaterialComponents.Tooltip"> // پرنت این هم میشه تولتیپ
            <item name="android:textColor">@color/white</item>
            <item name="fontFamily">@font/iransans</item> // دو تا فونت فمیلی هس که هر دو نیم اسپیس اپ و اندروید رو بیارید چون بعضی اندروید ها از این استفاده میکنه بعضیاش از اون
            <item name="android:fontFamily">@font/iransans</item>
        </style>


Chip Group------------------------------------------------------------------------------------------
توی آموزش های قبلی بهش پرداخته بودیم اینجا دوباره مرور میکنیم
 <HorizontalScrollView
        android:id="@+id/sortScroll"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_marginTop="@dimen/_3mdp"
        android:clipToPadding="false"
        android:fadingEdge="horizontal"
        android:requiresFadingEdge="horizontal"
        android:scrollbars="none" // نمیخوایم اسکرول بارش رو نشون بده
        app:layout_constraintTop_toBottomOf="@id/sortTitle">

        <com.google.android.material.chip.ChipGroup
            android:id="@+id/sortChipGroup"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:paddingHorizontal="@dimen/_10mdp"
            app:chipSpacing="0dp"
            app:selectionRequired="true"
            app:singleLine="true"
            app:singleSelection="true" />
    </HorizontalScrollView>

برای ایجاد این حالت دو تایی باید توی کد بهش بگیم
که به این منظور متد initPriceRange رو مینویسیم

    private fun initPriceRange() {
        //Label format
        val formatter = LabelFormatter { value ->
            value.toInt().moneySeparating()
        }
        //Customize
        برای پیاده سازی انواع ویژگی هاش از اپلای استفاده میکنیم
        binding.priceRange.apply {

        توسط ست ولیوز میتونیم مقادیر رنج رو بهش بدیم.
        مقدار ورودیش varArgs هست. یعنی بیش از یکی...
        اینا محل قرار گیری اولیه نقطه هامون هستن
        نه مینموم و ماکسیموم خود نمودار
        دیفالت ولیو ها میشن
            setValues(7000000f, 21000000f)

            تغییر دادن مقدار لیبل - سه رقم سه رقم جدا شدن و اینا
            setLabelFormatter(formatter)

            //Listener
            addOnSliderTouchListener(object : RangeSlider.OnSliderTouchListener {
                override fun onStartTrackingTouch(slider: RangeSlider) {

                }


                برای دسترسی به مقادیر اسلایدر
                میدونیم این اسلایدر دو تا مقدار بمون میده
                با استفاده از متد ولیوز این لیست رو میگیریم
                و با ایندکس به مقداراشون دسترسی پیدا میکنیم
                override fun onStopTrackingTouch(slider: RangeSlider) {
                    val values = slider.values
                    minPrice = values[0].toInt().toString()
                    maxPrice = values[1].toInt().toString()
                }
            })
        }
    }

Check Box-------------------------------------------------------------------------------------------
برای کوچیک کردنش از روش زیر استفاده میکنیم
چون با width & height هیچ تغییری نمیکنه سایز باکسش
ولی نکته اینه که اسکیل میاد تکست رو هم کوچیک بزرگ میکنه
پس میایم تکست رو به صورت تکست ویو میاریم توی پروژه
        android:scaleX="0.9"
        android:scaleY="0.9"
برای رنگش
        app:buttonTint="@color/dodgerBlue"
